import streamlit as st
from datetime import date
from docx import Document
import os
import base64

# Configura√ß√£o do tema
if 'theme' not in st.session_state:
    st.session_state.theme = 'dark'

def toggle_theme():
    if st.session_state.theme == 'light':
        st.session_state.theme = 'dark'
    else:
        st.session_state.theme = 'light'

# Fun√ß√£o para gerar o documento .docx
def generate_docx(data):
    filename = f"{data['nome_paciente'].replace(' ', '_').lower()}_{data['data_relatorio']}.docx"
    doc = Document()
    
    # Inserir dados da empresa
    doc.add_heading('Despertar Atendimento Terap√™utico', level=1)
    doc.add_paragraph("www.grupodespertar.org")
    doc.add_paragraph("FONES: (11) 2614-1375 | Cel. Wpp 11 96734-0051")
    doc.add_paragraph("RUA DR. ARGEMIRO COUTO DE BARROS, 06")
    doc.add_paragraph("CH√ÅCARA INGLESA, S√ÉO PAULO")
    
    # Dados do paciente
    doc.add_heading('Dados do Paciente:', level=2)
    doc.add_paragraph(f"Nome do Paciente: {data['nome_paciente']}")
    doc.add_paragraph(f"Idade: {data['idade']} anos")
    doc.add_paragraph(f"Ciclo Escolar: {data['ciclo_escolar']} / Turma: {data['turma']}")
    doc.add_paragraph(f"Institui√ß√£o de Ensino: {data['instituicao_ensino']}")
    doc.add_paragraph(f"Data do Relat√≥rio: {data['data_relatorio']}")
    doc.add_paragraph(f"Profissional Respons√°vel: {data['profissional_responsavel']}")

    # Evolu√ß√£o do Paciente
    doc.add_heading('Evolu√ß√£o do Paciente:', level=2)
    for comportamento, descricao in data['comportamentos'].items():
        if descricao:  # S√≥ adiciona se houver descri√ß√£o (n√£o for "N√£o Aplic√°vel")
            doc.add_paragraph(f"{comportamento}: {descricao}")

    # Interven√ß√µes
    doc.add_heading('Interven√ß√µes Mediante as Barreiras Enfrentadas:', level=2)
    doc.add_paragraph(data['intervencoes'])

    # Observa√ß√µes
    doc.add_heading('Observa√ß√µes do Profissional:', level=2)
    doc.add_paragraph(data['observacoes_profissional'])

    doc.save(filename)
    return filename

# Configura√ß√£o da p√°gina
st.set_page_config(
    page_title="Cl√≠nica Despertar - Relat√≥rio Mensal ATs",
    page_icon="üß†",
    layout="wide",
    initial_sidebar_state="expanded",
)

# Fun√ß√£o para criar um link de download
def get_binary_file_downloader_html(bin_file, file_label='File'):
    with open(bin_file, 'rb') as f:
        data = f.read()
    bin_str = base64.b64encode(data).decode()
    href = f'<a href="data:application/octet-stream;base64,{bin_str}" download="{os.path.basename(bin_file)}">Download {file_label}</a>'
    return href

# Sidebar
st.sidebar.title("Sobre o Gerador de Relat√≥rio")
st.sidebar.info("""
O Gerador de Relat√≥rio Mensal ATs √© uma ferramenta criada pela AperData para a Cl√≠nica Despertar, com o objetivo de facilitar a elabora√ß√£o de relat√≥rios psicol√≥gicos detalhados e personalizados, oferecendo aos profissionais um suporte pr√°tico e eficiente para a documenta√ß√£o dos atendimentos..
""")

st.sidebar.title("Entre em Contato")
st.sidebar.markdown("""
Para solu√ß√µes de IA sob medida ou suporte:

- üåê [aperdata.com](https://aperdata.com)
- üì± WhatsApp: **11 98854-3437**
- üìß Email: **gabriel@aperdata.com**
""")
# Fun√ß√£o principal da aplica√ß√£o Streamlit
def main():
    st.title('Cl√≠nica Despertar - Relat√≥rio Mensal ATs')
    
    # Op√ß√µes para ciclo escolar e turma
    opcoes_ciclo_escolar = [
        "Creche 0 a 03 anos", "Pr√©-escola 04 e 05 anos",
        "1¬∫ ano Ensino Fundamental", "2¬∫ ano Ensino Fundamental", "3¬∫ ano Ensino Fundamental",
        "4¬∫ ano Ensino Fundamental", "5¬∫ ano Ensino Fundamental", "6¬∫ ano Ensino Fundamental",
        "7¬∫ ano Ensino Fundamental", "8¬∫ ano Ensino Fundamental", "9¬∫ ano Ensino Fundamental",
        "1¬∫ ano Ensino M√©dio", "2¬∫ ano Ensino M√©dio", "3¬∫ ano Ensino M√©dio"
    ]
    opcoes_turma = ["A", "B", "C", "D", "E", "F", "G", "H", "I", "J", "K", "L", "M"]
    
    # Formul√°rio para entrada de dados
    with st.form("form"):
        st.header('Dados do Relat√≥rio')
        col1, col2 = st.columns(2)
        with col1:
            nome_paciente = st.text_input('Nome do Paciente')
            idade = st.number_input('Idade', min_value=0, max_value=150)
            ciclo_escolar = st.selectbox('Ciclo Escolar', options=opcoes_ciclo_escolar)
        with col2:
            turma = st.selectbox('Turma', options=opcoes_turma)
            instituicao_ensino = st.text_input('Institui√ß√£o de Ensino')
            data_relatorio = st.date_input('Data do Relat√≥rio', value=date.today())
        profissional_responsavel = st.text_input('Nome do(a) Profissional Respons√°vel')

        st.header('Evolu√ß√£o do Paciente')
        
        comportamentos = {
            "Manuten√ß√£o do Contato Visual": [
                "tem mantido contato visual durante intera√ß√µes sociais e atividades de grupo, o que indica um avan√ßo significativo na socializa√ß√£o.",
                "n√£o tem mantido contato visual durante intera√ß√µes sociais e atividades de grupo, o que pode dificultar a intera√ß√£o social."
            ],
            "Seguir Instru√ß√µes": [
                "segue instru√ß√µes simples de maneira independente, demonstrando compreens√£o e autonomia.",
                "n√£o segue instru√ß√µes simples sem assist√™ncia, mostrando dificuldade em compreender ou seguir orienta√ß√µes."
            ],
           "Participa√ß√£o em Atividades em Grupo": [
                "participa ativamente das atividades em grupo, como aulas de jud√¥, m√∫sica e rodas de conversa, mostrando envolvimento e interesse.",
                "evita participar de atividades em grupo, preferindo o isolamento."
            ],
            "Comunica√ß√£o Verbal": [
                "faz pedidos e expressa suas necessidades verbalmente, embora ainda com aux√≠lio ocasional.",
                "n√£o faz pedidos ou expressa suas necessidades verbalmente, necessitando de constante media√ß√£o."
            ],
            "Esperar a Vez": [
                "mostra paci√™ncia ao esperar sua vez durante atividades, melhorando sua capacidade de autocontrole.",
                "n√£o consegue esperar sua vez durante atividades, mostrando impaci√™ncia e falta de autocontrole."
            ],
            "Interesse por Novas Habilidades": [
                "demonstra curiosidade e vontade de aprender novas habilidades, indicando motiva√ß√£o para o aprendizado.",
                "n√£o demonstra interesse em aprender novas habilidades, o que pode afetar seu desenvolvimento acad√™mico e social."
            ],
            "Express√£o Emocional Adequada": [
                "expressa emo√ß√µes de maneira apropriada, o que facilita a intera√ß√£o com colegas e professores.",
                "expressa emo√ß√µes de maneira inapropriada, o que pode causar conflitos com colegas."
            ],
            "Intera√ß√£o Amig√°vel": [
                "interage de forma amig√°vel com colegas, promovendo um ambiente social positivo.",
                "age de forma agressiva ou n√£o amig√°vel com colegas, prejudicando a intera√ß√£o social."
            ],
            "Conclus√£o de Tarefas Acad√™micas": [
                "completa tarefas acad√™micas com pouca assist√™ncia, evidenciando progresso na independ√™ncia.",
                "necessita de assist√™ncia constante para completar tarefas, evidenciando falta de autonomia."
            ],
            "Comportamento Sentado": [
                "mant√©m-se sentado durante atividades de mesa, facilitando a concentra√ß√£o e participa√ß√£o.",
                "levanta-se frequentemente durante atividades de mesa, indicando dificuldade em manter a aten√ß√£o."
            ],
            "Aceita√ß√£o de Redirecionamentos": [
                "aceita redirecionamentos sem resist√™ncia, mostrando flexibilidade e adapta√ß√£o.",
                "resiste a redirecionamentos e orienta√ß√µes, mostrando inflexibilidade."
            ],
            "Compartilhamento de Brinquedos": [
                "compartilha brinquedos e materiais, favorecendo a intera√ß√£o social.",
                "tem dificuldade em compartilhar brinquedos e materiais, afetando a intera√ß√£o social."
            ],
            "Iniciativa em Conversas": [
                "inicia conversas com colegas e adultos, promovendo a comunica√ß√£o espont√¢nea.",
                "evita iniciar conversas com colegas e adultos, o que pode limitar seu desenvolvimento comunicativo."
            ],
            "Participa√ß√£o em Atividades F√≠sicas": [
                "participa de atividades f√≠sicas sem resist√™ncia, o que √© crucial para o desenvolvimento motor e social.",
                "resiste a participar de atividades f√≠sicas, o que √© prejudicial para seu desenvolvimento motor."
            ],
            "Linguagem Apropriada": [
                "utiliza linguagem apropriada para sua idade, facilitando a comunica√ß√£o e entendimento.",
                "usa linguagem inadequada para a idade, o que pode causar mal-entendidos."
            ],
            "Empatia": [
                "demonstra empatia pelos sentimentos dos outros, o que √© fundamental para o desenvolvimento de relacionamentos saud√°veis.",
                "n√£o demonstra empatia pelos sentimentos dos outros, afetando negativamente suas rela√ß√µes."
            ],
            "Seguir Rotinas": [
                "segue rotinas di√°rias sem protesto, mostrando adapta√ß√£o e compreens√£o das mesmas.",
                "protesta contra rotinas di√°rias, indicando resist√™ncia e dificuldade de adapta√ß√£o."
            ],
            "Cumprimento de Regras": [
                "cumpre regras estabelecidas com consist√™ncia, o que promove um ambiente escolar seguro e organizado.",
                "tem dificuldade em cumprir regras estabelecidas, prejudicando o ambiente escolar."
            ]
        }

        comportamentos_selecionados = {}
        for comportamento, opcoes in comportamentos.items():
            escolha = st.selectbox(comportamento, ["Positivo", "Negativo", "N√£o Aplic√°vel"])
            if escolha == "Positivo":
                comportamentos_selecionados[comportamento] = opcoes[0]
            elif escolha == "Negativo":
                comportamentos_selecionados[comportamento] = opcoes[1]
            else:
                comportamentos_selecionados[comportamento] = ""  # N√£o adiciona nada se for "N√£o Aplic√°vel"

        st.header('Interven√ß√µes Mediante as Barreiras Enfrentadas')
        intervencoes = st.text_area('Interven√ß√µes Mediante as Barreiras Enfrentadas')

        st.header('Observa√ß√µes do Profissional')
        observacoes_profissional = st.text_area('Observa√ß√µes do Profissional')

        # Bot√£o para gerar o relat√≥rio
        submitted = st.form_submit_button('Gerar Relat√≥rio')
        
        if submitted:
            data = {
                'nome_paciente': nome_paciente,
                'idade': idade,
                'ciclo_escolar': ciclo_escolar,
                'turma': turma,
                'instituicao_ensino': instituicao_ensino,
                'data_relatorio': data_relatorio.strftime('%d-%m-%Y'),
                'profissional_responsavel': profissional_responsavel,
                'comportamentos': comportamentos_selecionados,
                'intervencoes': intervencoes,
                'observacoes_profissional': observacoes_profissional
            }

            filename = generate_docx(data)
            st.success('Relat√≥rio gerado com sucesso!')
            st.markdown(get_binary_file_downloader_html(filename, 'Relat√≥rio'), unsafe_allow_html=True)

if __name__ == '__main__':
    main()
